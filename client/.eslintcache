[{"C:\\Users\\dmacd\\Documents\\GitHub\\david-macdonald-instock\\instock\\client\\src\\pages\\Warehouse\\Warehouse.js":"1","C:\\Users\\dmacd\\Documents\\GitHub\\david-macdonald-instock\\instock\\client\\src\\pages\\ItemEdit\\ItemEdit.js":"2"},{"size":8769,"mtime":1606413800812,"results":"3","hashOfConfig":"4"},{"size":8528,"mtime":1606443333843,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4i9kqe",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\dmacd\\Documents\\GitHub\\david-macdonald-instock\\instock\\client\\src\\pages\\Warehouse\\Warehouse.js",[],"C:\\Users\\dmacd\\Documents\\GitHub\\david-macdonald-instock\\instock\\client\\src\\pages\\ItemEdit\\ItemEdit.js",["11"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport './ItemEdit.scss'\r\nimport backArrow from '../../Assets/Icons/arrow_back-24px.svg'\r\nclass ItemEdit extends Component {\r\n    state = {\r\n        name: \"\",\r\n        description: \"\",\r\n        category: \"\",\r\n        categoryList: [\"Accessories\", \"Apparel\", \"Electronics\", \"Gear\", \"Health\"],\r\n        status: \"\",\r\n        check: true,\r\n        quantity: \"\",\r\n        warehouse: \"\",\r\n        warehouseList: [],\r\n        warehouseNameList: []\r\n    }\r\n\r\n    getItem = () => {\r\n        axios.get(`http://localhost:8080/warehouse/${this.props.match.params.warehouseId}/inventory/${this.props.match.params.itemId}`)\r\n        .then(res=>{\r\n            this.setState({\r\n                name: res.data.inventoryItem[0].itemName,\r\n                description: res.data.inventoryItem[0].description,\r\n                category: res.data.inventoryItem[0].category,\r\n                status: res.data.inventoryItem[0].status,\r\n                quantity: res.data.inventoryItem[0].quantity,\r\n                warehouse: res.data.inventoryItem[0].warehouseName,\r\n            })\r\n            if(res.data.inventoryItem[0].status.toLowerCase() === 'out of stock'){\r\n                this.setState({\r\n                    check: false,\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    check: true,\r\n                })\r\n            }\r\n        })\r\n        .catch(console.error)\r\n    }\r\n\r\n    getAllWarehouses = () => {\r\n        axios.get(`http://localhost:8080/warehouse`)\r\n        .then(res=>{\r\n            this.setState({\r\n                warehouseNameList: res.data.map(warehouse=> warehouse.name).sort(),\r\n                warehouseList: res.data\r\n            })\r\n        })\r\n        .catch(console.error)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getItem();\r\n        this.getAllWarehouses();\r\n    }\r\n\r\n    handleName = (e) => {\r\n        this.setState({ \r\n            name: e.target.value \r\n        });\r\n    };\r\n    \r\n    handleDescription = (e) => {\r\n        this.setState({ \r\n            description: e.target.value \r\n        });\r\n    };\r\n    \r\n    handleCategory = (e) => {\r\n        this.setState({ \r\n            category: e.target.value \r\n        });\r\n    };\r\n    \r\n    handleStatus = (e) => {\r\n        const bool = (e.target.value === \"true\")\r\n        if(bool){\r\n            this.setState({status: \"In Stock\"})\r\n        } else {\r\n            this.setState({status: \"Out of Stock\"})\r\n        }\r\n        this.setState({\r\n          check: bool\r\n        });\r\n    };\r\n    \r\n    handleWarehouse = (e) => {\r\n        this.setState({ warehouse: e.target.value });\r\n    };\r\n\r\n    handleReset = () => {\r\n        this.getItem()\r\n    }\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const warehouseID = this.state.warehouseList.find(warehouse => warehouse.name === this.state.warehouse).id\r\n\r\n        const item = {\r\n            category: this.state.category,\r\n            description: this.state.description,\r\n            id: this.props.match.params.itemId,\r\n            itemName: this.state.name,\r\n            quantity: this.state.quantity,\r\n            status: this.state.status,\r\n            warehouseID: warehouseID,\r\n            warehouseName: this.state.warehouse\r\n        }\r\n\r\n        // axios.put(`http://localhost:8080/warehouse/${this.props.match.params.warehouseId}/inventory/${this.props.match.params.itemId}/edit`, item)\r\n        // .then(res => {\r\n        //     this.props.history.push(`http://localhost:8080/warehouse/${this.props.match.params.warehouseId}/inventory/${this.props.match.params.itemId}`)\r\n        // })\r\n        // .catch(console.error)\r\n\r\n        this.props.history.push(`http://localhost:8080/warehouse/${warehouseID}/inventory/${this.props.match.params.itemId}`)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n               <div className=\"itemEdit\">\r\n                    <section className=\"itemEdit__banner\">\r\n                            <Link to={`/warehouse/${this.props.match.params.warehouseId}/inventory/${this.props.match.params.itemId}`}>\r\n                                <img className=\"banner__arrow\" src={backArrow} alt=\"\"/>\r\n                            </Link>\r\n                            <h1 className=\"banner__heading\">Edit Inventory Item</h1>\r\n                    </section>\r\n                    <form className=\"itemEdit__form\" onSubmit={this.handleSubmit}>\r\n                        <div className=\"itemEdit__details\">\r\n                            <h2 className=\"itemEdit__details-title\">Item Details</h2>\r\n                            <div className=\"itemEdit__details-name\">\r\n                                <label className=\"itemEdit__details-label\">Item Name</label>\r\n                                <input id=\"itemName\" name=\"itemName\" type=\"text\" placeholder=\"Item Name\" value={this.state.name} onChange={this.handleName}/>\r\n                            </div>\r\n                            <div className=\"itemEdit__details-description\">\r\n                                <label className=\"itemEdit__details-label\">Description</label>\r\n                                <textarea id=\"itemDescription\" name=\"itemDescription\" placeholder=\"Description\" value={this.state.description} onChange={this.handleDescription}></textarea>\r\n                            </div>\r\n                            <div className=\"itemEdit__details-category\">\r\n                                <label className=\"itemEdit__details-label\">Category</label>\r\n                                <select id=\"itemCategory\" name=\"itemCategory\" value={this.state.category} onChange={this.handleCategory}>\r\n                                {this.state.categoryList.map((category, i) => (\r\n                                    <option key={i} value={category}>{category}</option>\r\n                                ))}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"itemEdit__availability\">\r\n                            <h2 className=\"itemEdit__availability-title\">Item Availability</h2>\r\n                            <div className=\"itemEdit__availability-status\">\r\n                                <label className=\"itemEdit__availability-label\">Status</label>\r\n                                <div className=\"status__wrapper\">\r\n                                    <div className=\"status__in\">\r\n                                        <input id=\"itemStatus\" name=\"itemStatus\" type=\"radio\" checked={this.state.check} value=\"true\" onChange={this.handleStatus}/>\r\n                                        <label className={!!this.state.status&&this.state.status.toLowerCase() === \"in stock\" ? \"status__in-radio checked\" : \"status__in-radio\"}>In Stock</label>\r\n                                    </div>\r\n                                    <div className=\"status__out\">\r\n                                        <input id=\"itemStatus\" name=\"itemStatus\" type=\"radio\" checked={!this.state.check} value=\"false\" onChange={this.handleStatus}/>\r\n                                        <label className={!!this.state.status&&this.state.status.toLowerCase() === \"out of stock\" ? \"status__out-radio checked\" : \"status__out-radio\"}>Out of Stock</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"itemEdit__availability-warehouse\">\r\n                                <label className=\"itemEdit__availability-label\">Warehouse</label>\r\n                                <select id=\"itemWarehouse\" name=\"itemWarehouse\" value={this.state.warehouse} onChange={this.handleWarehouse}>\r\n                                {this.state.warehouseNameList.map((warehouse, i) => (\r\n                                    <option key={i} value={warehouse}>{warehouse}</option>\r\n                                ))}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"itemEdit__buttons\">\r\n                            <button className=\"itemEdit__cancel\" type=\"reset\" onClick={this.handleReset}>Cancel</button>\r\n                            <button className=\"itemEdit__save\" type=\"submit\">Save</button>\r\n                        </div>\r\n                    </form> \r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ItemEdit;",{"ruleId":"12","severity":1,"message":"13","line":103,"column":15,"nodeType":"14","messageId":"15","endLine":103,"endColumn":19},"no-unused-vars","'item' is assigned a value but never used.","Identifier","unusedVar"]